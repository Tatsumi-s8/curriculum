■ITとは？

・IT...「Information Technology」の略。パソコンやスマートフォンなどの情報技術の総称を意味する。



■OS

・OS...「Operation System」の略。アプリやデバイスを動作させるための基本となるソフトウェアのこと。中枢的な役割
・Windows...1985年から発売されたマイクロソフトが開発・販売しているOS製品。主にPCのOSとして普及している。
・macOS(Mac OS X)...米アップル（Apple）社がパーソナルコンピュータ「Mac」シリーズ向けに提供しているOS製品。
・UNIX...アメリカ最大手の電話会社であるAT&T社が1968年に開発したOS、およびその流れをくむOSの総称。現存する中でもっとも古いOSのひとつで色々なOSの土台になった。特徴としては安全性が高く、また余計な機能が少ないので軽い。
・Linux...1991年、ヘルシンキ大学で当時大学院生だったLinus Torvalds（リーナス・トーバルズ）によって開発が行われた。UNIXとの違いは、オープンソースソフトウェアとして広く公開・配布されており、GPLというライセンス体系に基づいて誰でも自由に入手・改変・再配布が可能な点。世界中のエンジニアが日々改良し、ブラッシュアップを続けている。
 


■言語・環境

・HTML...「Hyper Text Markup Language」の略で、Webページを作るための最も基本的なマークアップ言語のひとつ。
・CSS...「Cascading Style Sheets」の略で、HTMLのタグで囲んだ範囲の文字の色・大きさ・背景の色や配置など、WEB上での見た目を指定するための言語。
・MySQL...世界でもっとも利用されているデータベース管理システム。大容量のデータに対しても高速で動作し、便利な機能がたくさんあるので、非常に実用性が高い。
　※「データベース」とは「複数で共有、利用すること」と「検索、加工すること」を目的に整理されたデータの集まりのこと。
・PHP...PHPとは動的にWebページを生成することができるサーバーサイドのスクリプト言語。PHPは掲示板・問い合わせフォーム・ショッピングカートなど、動的なWebページの生成が必要なさまざまなアプリケーションで使われている。
・JavaScript...JavaScriptとはWebサイトに動きをつけるプログラミング言語。1995年、Brendan EichがNetscape社のエンジニアの頃に開発された。
　「メッセージボックスの表示」や「HTMLコンテンツの操作」、「カレンダー」、「地図」、「ゲーム」など、様々な動的コンテンツを作成できる。
・jQuery...jQueryとは、ジョン・レシグが開発し、2006年1月にリリースした「JavaScriptのライブラリ」のこと。JavaScriptを使いやすく拡張したもので、中身はJavaScriptそのものである。
　※「ライブラリ」とは、ある程度まとまったプログラムをあらかじめ作ってくれているファイルのこと。例えるなら、あらかじめ材料を切ってくれていて、すぐに料理できるように準備してくれている「カット済み野菜のようなもの」。
・Apache...Apacheとは、世界的に最も普及しているWebサーバ（HTTPサーバ）ソフトウェアの一つ。古くから開発・公開されてきた人気の高いWebサーバで、安定性や機能の豊富さ、対応ソフトウェアの多さなどが評価され、企業から個人まで様々な用途で利用されている。モジュール(部品または要素)により基本機能を拡張可能。LinuxだけでなくWindowsなど複数のサーバーOS上で利用可能。
・Bootstrap...BootstrapはTwitter社が開発したCSSの「フレームワーク」のこと。通常CSSを書く場合、全てのスタイルを自分で作っていく必要があるが、このフレームワークにはよく使われるスタイルがあらかじめ定義してあるため、ルールに沿って利用するだけで整ったデザインのページを作成できる。
　※「フレームワーク」とはプログラムとかのひな形のようなもの(型、決まりきった手順?）




■エンジニアなど

・SE...システムエンジニアのこと。顧客の要求から仕様を決定し、大まかな設計をするまでの情報システム開発における上流工程を担当。また予算や人員、進捗管理などのマネジメント業務も大切なポジション。
・PG...プログラマーのこと。主な仕事内容はコンピュータのプログラミング作業。PGは、SEが作成した仕様書を元に、実際にコードを書いてシステムのプログラムを組んでいく。その後、予定通りの動作をするかテストを行い、試験の結果、万が一バグや不具合が生じたときは、その修正対応を行う。
・Webデザイナー...企業や個人などのクライアントから依頼されたWebサイトのデザインを担当。クライアントが思い描いているWebサイトを制作できるよう、全体の構成を考えながらデザインを構築していく。構成やレイアウトに始まり、各部のデザイン、コーディングを行う。




■ユーザーインターフェース(UI)

CUI...Character User Interfaceの略。キーボードに入力されるコマンドによって、オペレーティング・システム上の操作を行う、ユーザーインターフェースの事を言う。コンピュータユーザーに対しての情報が、文字で表示される。
GUI...Graphical User Interfaceの略。コンピュータへ出す命令や指示等を、ユーザが画面上で視覚的に捉えて行動を指定できるもので、CUIに比べ、直感的に操作できるのが特長。例えば、Windowsの画面などボタンをクリックして指示を送ったりできるもの。
　


■ファイルとディレクトリ

ファイル...ファイルとは、コンピュータにおけるデータの管理単位の一つで、ストレージ装置（外部記憶装置）などにデータを記録する際に利用者やOSから見て最小の記録単位となるデータのまとまり。
ディレクトリ...ディレクトリとは、フォルダのこと。Windowsでは、わかりやすくフォルダと表現している。　
ルート・ディレクトリ...ルートディレクトリとは、コンピュータがストレージ（外部記憶装置）の内容を整理するファイルシステムにおいて、装置やシステム全体の最上位のディレクトリのこと。
カレント・ディレクトリ...ユーザーが現時点で作業を行なっているディレクトリーのこと。
パス...ファイルやディレクトリまでの道筋(パス)のこと。C:\Windows\system32\ (「C:」ドライブの中にある「Windows」フォルダの中にある「system32」フォルダ)や
　/usr/bin/perl (「usr」ディレクトリの中にある「bin」ディレクトリの中にある「perl」という名前のファイル)のように書く。
絶対パス...「絶対パス」とは、そのファイルの位置を最初から最後まで完全に記述する方法。”http://~”や”https://~”といった記述になり、アドレス欄に貼り付けてもそのファイルを表示する。
相対パス...「相対パス」は、編集しているファイルを置いている場所を起点にして、対象のファイルのURLを記述する方法。ドメイン部分を省略し、自身のファイル位置を”./”で表す。そこから上や下のディレクトリにあるファイルへの道筋を示す記述方法。



■各種プロトコル（プロトコル...コンピューター同士の通信をする際の手順や規格のこと。情報を送り出す端末の選定、データの形式、パケットの構成、エラーの対処などを取り決めた通信の約束事である。階層１〜７に分かれている)

・HTTP...「Hyper Text Transfer Protocol」の略。インターネットの代名詞でもあるWWW(World Wide Web)上でWebサーバとクライアントが、 HTMLで書かれた文書などの情報をやりとりする時に使われる通信手順(プロトコル)を意味する。
・FTP...ファイルを転送するときに使うプロトコル＝約束事のこと。サーバーにアップされたファイルの一覧をみることができ、またファイルをサーバーにアップロードしたり、ダウンロードしたりもできる。anonymousサーバー(誰でもアクセスできる)と、そうでないサーバーの２種類がある。
・HTTPS...「Hypertext Transfer Protocol Secure」の略。暗号化通信により、HTTPより安全性が強化されている。郵便物にたとえると、HTTPは「はがき」で、HTTPSが「封書」のような感じ。HTTPでやり取りする情報ははがきのように配達系路上の第三者がのぞき見したり、勝手に何かを書き加えたりすることができるが、HTTPSの場合は暗号化されて封書のように中身が受け手以外には分からないようになり安全。
・SSL...「Secure Sockets Layer」の略。インターネット上におけるウェブブラウザとウェブサーバ間でのデータの通信を暗号化し、送受信させる仕組みのこと。インターネット上で頻繁に送受信される個人情報や、クレジットカード情報、ログインID・パスワードといった情報は、常に悪意ある第三者から狙われているため、これらの重要な情報を、悪意ある第三者による盗聴を防いだり、送信される重要な情報の改ざんを防ぐ役割を持っている。
・SSH...「Secure Shell」の略。ネットワークに接続された機器を遠隔操作し、管理するための手段。通信途中の情報は全部暗号化される。Webサイトの安全な表示が目的でWebサイトの閲覧者が対象者であるSSLに対し、SSHはサーバーへの接続が目的で、サーバー管理者が対象者である。
・ポート、ポート番号...ポートはよく扉（ドア）に例えられる。IPアドレスが住所「家」であれば、ポートは外に出る・外から入る「扉（ドア）」に該当する。ポート番号はその扉の番号である。ホームページでインターネットはIPアドレスで通信を行っていると記載されているが、実際には「IPアドレス＋ポート番号」で通信を行っている。
・HTTP、FTP、SSHの各ポート番号
　HTTP...TCP 80
　FTP...TCP 20(データ)、TCP 21(制御)
　SSH...TCP 22
・ファイアウォール...企業などの内部ネットワークをインターネットを通して侵入してくる不正なアクセスから守るための“防火壁”のこと。送られてくるパケット（データのかたまり）の情報から接続を許可するか判断し、不正なアクセスであると判断した際には、管理者に通報できるよう設計されている。またより高いセキュリティを保てるよう々な付加機能を持っているものが多く、様々なネットワークに柔軟に対応。
　※ファイアウォールのフィルタリング(通過させるかどうか判断する）の方法
　 ●パケットフィルタリング
　　ヘッダ（パケットの先頭にある、パケットの状態を記録している部分）を解析して、通過させるかどうか判断する
　 ●アプリケーションレベルゲートウェイ
　　プロキシサーバ経由で接続を行い、サービス毎に認証を行う
　　※プロキシサーバ...企業の社内ネットワークなどからインターネットに接続する際に、出入り口で中継をしているサーバ。(詳しくは下の「■ドメイン」に...)
・TCP...「Transmission Control Protocol」 の略。IPの上位プロトコルのトランスポート層で動作するプロトコル。インターネットにおいて標準的に利用されているプロトコルでネットワーク層のIPとセッション層以上のプロトコル（例：HTTP、FTP、Telnet) の橋渡しをする形で動作している。機能としてはコネクション管理、確認応答、シーケンス番号、順序制御、再送制御、フロー制御、輻輳制御、チェックサムなどがあげられる。
　※シーケンス...ITの分野では、順番に並んだ一続きのデータや手順のことや、並んだ順番にデータや手順を取り扱う処理方式などのことを意味する。



■IPアドレス

・IPアドレス...「Internet Protocol Address」の略。パソコンやスマートフォンなどネットワーク上の機器を識別するために割り当てられていて、インターネット上での住所のような役割を担っている。
・グローバルIPアドレス...インターネットに接続するタイプのIPアドレス。動的IPアドレス、静的IPアドレス（固定IPアドレス）の二つに分かれる。
　 ●動的IPアドレス...IPアドレスが変動する場合、これに分類される。家庭でインターネット・サービス・プロバイダー(ISP)に接続する場合など。
　 ●静的IPアドレス(固定IPアドレス)...変動しないIPアドレス。接続のたびにコロコロ変わって欲しくない場合に、導入が必須。例えば、ホームページの公開サーバーや、メールの送受信のためのメールサーバーの場合。
・プライベートIPアドレス...インターネットに接続しないタイプのIPアドレス。



■ドメイン

・ドメイン...インターネット上に存在するコンピューターやネットワークを識別するための名前(住所のようなもの)。例) http://www.abc123/　の「www」がホスト名、「abc123」がドメイン名。メールの場合、info@abc123.com の「abc123.com」がドメイン名。
・DNS...「Domain Name System」。インターネットの重要な基盤技術の一つで、 ドメイン名とIPアドレスの対応付けや、 メールの宛先ホストを指示するためのシステム。インターネット上における通信は自分と相手先のIPアドレスを用いて行われるが、その際このドメイン名には、 IPv4アドレス・・・とIPv6アドレス・・・が対応している」 といった情報を保持、 あるいは検索するためのシステム。
・VPN...「Virtual Private Network」。インターネット上に仮想の専用線を設け、安全なルートを確保した上で重要な情報をやり取りすることにより、盗み見や改ざんなどの脅威から大切な情報を守ることができる。例えばフリーのWi-Fiなど、公衆のネットワークでやり取りする情報は盗み見や改ざんなどのリスクがあるため、VPNで暗号化する必要がる。
・ブリッジ...OSI参照モデルのデータリンク層におけるデータ中継機器。ネットワークにおける交通整理員さんのようなもので、ネットワーク中のデータ（の中にあるMACアドレス）を見て、行き先を振り分けてくれる機器である。
　※MACアドレス...ネットワーク機器に割り当てられる住所。通信において、データの受け渡し先を特定する際に使われる。IPアドレスは「最終的にどこに届けるか」を表現するときに使う情報だが、MACアドレスは「次に、どこに届けるか」を表現するときに使う。「このデータのお届け先は、〇〇です」がIP、「このデータを次は、どこに(中継地点？)持っていきます」がMACアドレス。
・プロキシサーバー...企業の社内ネットワークなどからインターネットに接続する際に、出入り口で中継をしているサーバ。ネットワーク内におけるインターネットの出入り口をプロキシサーバー経由に限定することで、外部からの不正アクセスを防止したり、業務と関係のないWebサイトへのアクセスを禁止したりすることができる。また、データを蓄えるキャッシュ機能があるため、別のコンピューターから同じ要求が来ても、素早くデータを返すことが可能。つまり、社員全員が特定サイトを閲覧するような場合でも、誰かが一度アクセスするだけで済むため、時間の短縮化が図れる。



■電子メール

・SMTP...「Simple Mail Transfer Protocol」。メールを相手のメールサーバーまで届ける仕組み。簡単なメールの送信の手順で、郵便の仕組みに例えると手紙は、赤いポストに投函されたあと、郵便局の人が集めに来る。そして、宛先の住所を目がけて、クルマに揺られ、列車で運ばれ、最寄りの郵便局に届けられる。これのメール版。
・POP...「Post Office Protocol」。メールを受信するシステム。電子メールはスマホやパソコンに自動的に送信されず、メールソフトが自動的にメールサーバーにアクセスしてメールをダウンロードしている。先程の郵便に例えると、郵便局に出かけては私書箱から手紙を取ってくるようなもの。
・IMAP...「Internet Message Access Protocol」。POPと同じくメールを受信する手順だが、メールをサーバーに残すか残さないかという違いがある。POPの場合、サーバーから受信したメールは、サーバからは削除されるが、IMAPの場合、ダウンロードするのはメールのコピーなのでメール本体はサーバ上に残る。ユーザーのメールはサーバーが管理してくれる。



■セッションとクッキー

・セッション...コンピューターネットワークにおけるセッションとは、通信の開始から終了までを指す。クライアントとサーバーで通信を行う場合であれば、クライアントからサーバーへ接続した時点でセッションが始まり、サーバーから切断するとセッションが終了する。この一連の流れを管理することをセッション管理と言う。
・クッキー...自分が見ているWebサイトから自分のスマホやPCの中に保存される情報こと。そこにはサイトを訪れた日時や、訪問回数など、さまざまな内容が記録されている。例えば、FacebookやTwitterなど、IDとパスワードを入力して一度ログインしたサイトに、しばらくしてからもう一度アクセスするとIDとパスワードを入力しないでもすんなり入ることができる。これはログイン情報が保存されたcookieのおかげだ。端的に言うと「ユーザーとサーバー間で特定の情報をやり取りするファイル」「閲覧中のWebサイトからスマホやパソコンに保存される情報」「Webサイトを訪れたユーザー情報を一時的に保存する仕組み＆データ」など。
・キャッシュ...「訪問したWEBページの情報(画像やテキスト情報など)」を一時的に保存する仕組み（またはその一時的なデータそのもの）のことで、よく訪問するページの表示スピードが上がるというメリットがある。クッキーはIDやPASSなどの「ユーザーの情報(入力内容の保持?)」を保存しログインなどを省略するが、キャッシュは「WEBページの情報」を保存し再度訪れた際、表示を早くするためのもの。



■DB（データベース）について　

・DB...複数の主体で共有、利用したり、用途に応じて加工や再利用がしやすいように、一定の形式で作成、管理されたデータの集合のこと。
・チューニング...IT業界においてはシステムやプログラムなどを改良し、パフォーマンスの向上を図ることを言う。データベースの場合。同じデータを扱うにしても、それを使用する媒体によって処理速度が変化したり、かかる負荷（必要なメモリー量）が違ったりする。こういった時、出来る限り手間がかからず、使いやすいように調整を行うのがチューニングだ。市販されているパソコンは既にチューニングが行われた状態らしい。
・スロークエリ...データベースにおいて、時間のかかっているSQL(遅いSQL)のことをスロークエリと呼ぶ。事業や実行する処理にもよるが、2秒以上かかっていたら大体遅い部類と言って良い。MySQLやPostgreSQLの設定により取得することが可能(チューニングも)。
・インデックス...索引のことで、どのデータがどこにあるかを示した一覧表。素早く必要なデータにアクセスでき、本で言う目次のようなもの。



■テストについて

・フロー...何かの「流れ」を意図する表現。「○○フロー」や「フロー○○」という用語が出てきたら「○○の流れ」や「流れが○○する（流れを○○する）」と読み替える。
・単体テスト...システム開発における工程のひとつであり「合体前の部品は、それぞれちゃんと動く？」を確認するテストのこと。1つの「関数」「モジュール」が正常に動作するかのテスト。
・結合テスト...システム開発における工程のひとつであり「合体して、ちゃんと動く？」を確認するテストのこと。複数の「関数」「モジュール」を組み合わせて、正常に動作するかのテスト。



■チケット管理ツール
・チケット管理ツール...タスク管理ツールのこと。プロジェクト毎に発生する各種タスクを発行して、制作者に対して仕事を依頼するためのもの。自分自身で管理するために使用するのもOK。
・タスク...仕事、課業、職務、任務などの意味を持つ英単語。ビジネス用語として業務を構成する個々の作業や工程などを表すほか、コンピュータの分野ではソフトウェアの実行単位のことをタスクということがある。



■バージョン管理

・Git...ファイル編集を手助けするための管理ツール。最大の特徴は「編集前のファイルを残したまま、新しいデータの保存ができる」こと。特にチームで作業をしている場合に効果的で、ファイルを複数人で共有すると情報の共有が速くなるうえ、チームでの作業が効率的になる。また、Gitを利用すると自分のパソコンへ変更履歴のすべてが保存されるので、複数人が同時に同じファイルの編集して、先に保存した人の記録が消えてしまう事を防ぐ。
・SourceTree...Gitを簡単に使えるようにしたツールでGitの理解も簡単にできる優れもの。全てコマンドで操作していくCUI形式ではなく、ぽちぽちクリックしながら視覚的に操作していくGUI形式でGitを使えるツール。Mac/Winどちらでもすぐインストール可能。自分、他人の作業を見える化できるから安心。
・SVN...「Apache Subversion」。バージョン管理システムのひとつであり、ファイルの変更履歴を管理してくれるシステム。
・デグレ...「デグレード(degrade)」。システム開発におけるプログラム修正やインフラ設定の変更等により、それまで正常に動作していた機能が動かなくなるという、品質低下のトラブル事象を指す。日本のIT業界でしか通じない特殊な業界用語(英語では「リグレッション(Regression)」)。
・マージ...複数のデータやファイルを決まった手順や規則に従い、1つに統合すること。データベース上の複数にわたるテーブルのデータを比較し、項目が一致したものを取り出し、新しいテーブルとして表示する事もマージと呼ぶ。
・マージツール...プログラムの修正の衝突が起こった場合、テキストベースのマージツールで地道にソースコードを修正していくしかなかったが、とてもめんどくさく、まちがいが起こりやすく辛い作業だった。そのようなマージ作業を簡単確実に実行するためのツール。



■その他

・ロジック...プログラムを処理するための内容や手順のことを指す。 目的のために必要な動作の流れを決めることは「ロジックを組む」と呼ばれ、このロジックに従ってプログラミングを進めていく。
・デバッグ...プログラムの誤り・不具合（＝バグ）を見つけ、手直しをすること。
・開発手法(ウォーターフォール開発、アジャイル開発)
　●ウォーターフォール開発...ウォーターフォール型開発とは、開発現場でよく用いられる手法で、開発手順を1つずつ確認しながら工程を進めていく手法のこと。要件定義や、外部設計、内部設計、といった工程を、上流工程から下流工程へ順におこなっていくことで、常に計画性を保ち、開発をおこなうことができる。
 　各工程が完了するまでは次の工程に進まないという特徴があり、また前の工程には戻らないという手法になるため、ひとつひとつの工程に抜け漏れがないかどうか厳重に管理しながら進めていく必要がある。
　●アジャイル開発...クライアントの要望に応えるシステムをできる限り素早くリリースしようという考えに基づいている開発手法で、クライアントのビジネスの始動を早めようという目的がある。要件定義や外部設計、内部設計などの工程を少しずつ反復して行うため、ユーザーからの要望に応じたアップデートなどに対応しやすい手法だとされている。
　 開発メンバーがシステムにおける優先度に順位をつけ、短い期間での納品を目指すため、システムの優先順位を決めるためにミーティングを毎日行い、チーム内でスムーズに連携をとる「スクラム」という手法を取る。
・アルゴリズム...問題解決にいたる手順・方法のこと。先人の知恵？「暗号化アルゴリズム」=「暗号化のやり方」。想定する条件の中で、決まった手順・作業を繰り返している限りは、欲しい結果に到達することができるものが広くアルゴリズムと呼ばれており、コンピュータープログラムは、アルゴリズムの集積である。
　●ソートアルゴリズム...プログラミングでは大量のデータを取り扱うケースが頻発にある。その際、昇順や降順など、記憶領域に格納されたデータを一定の規則で整列（ソート）させる作業に用いられるアルゴリズム。「バブルソート」「クイックソート」「マージソート」の3種類がある。
　●探索(サーチ)アルゴリズム...大量のデータの中から条件に合致した目的の要素を効率良く見つけるアルゴリズム。先頭のデータから条件と照らし合わせながら調べていく「線形探索」と、整列されたデータ群を2つのグループに分け、探している要素かどちらのグループにあるか判断することを繰り返し、検索範囲を狭めていく「二分探索」に分かれる。
・フローチャート図...プログラムの流れを設計するための図解。別名「流れ図」。プログラム構造の整理・プログラミング速度を上げるため（効率化）・プログラム品質の向上のために作られる。プログラムの概要ロジックの設計(日本語)、詳細ロジックの設計(数式・記号)、業務フローの設計、可視化の順で行われる。
・設計書(外部設計、内部設計)...「システムをどのように作るか」など設計の工程が書かれた資料のこと。
　●外部設計...要件定義で決定した機能や性能、制約条件などを基にしたシステムの基本となる設計を作ること。操作画面や操作方法、データ出力など、ユーザーから見えるインターフェース部分の仕様を決定したり、
　 セキュリティや運用規定、システム開発のスケジュールや費用などを設計したりと、基本的にユーザーに向けた仕様を設計するのが外部設計。一般的に外部設計までが上流工程に含まれる。
　●内部設計...外部設計を基に、システム内部の動作や機能、物理データなど、ユーザーから見えにくい詳細な部分の設計すること。プログラム機能を単体に分割し、そこで使用する物理データや入出力を設計する。外部設計の結果をプログラミングしやすくするのが内部設計の役割である。
・要件定義(要求仕様書)...クライアントがシステムに求めている機能をまとめて、システムの仕様や範囲を決めること。例えば、必要な機能や性能、要求される信頼性や保守性、そのほか実現すべき業務モデルや業務フローなどについて、クライアントの要望を詳しくヒアリングし、要件定義書を作成する。要件定義の精度が高いほど外部設計を行いやすく、その後の仕様変更を減らすことができる。要件定義で確定しなかった項目は、次の外部要件の段階で再度検討され、仕様が決定される。
・システム開発におけるテスト(単体テスト、結合テスト、総合テスト)...バグや不具合のない業務システムを導入するために行う、さまざまなテスト。
　●単体テスト...開発したシステムを機能ごとに検証すること。プログラミングが完了してから一番最初に行われるテストであり、関数またはメンバー関数単位で不具合を分析するのが一般的。内部設計で定めた定義通りにシステムが動作することで、単体テストによる検証を完了できる。
　●結合テスト...システムにおける複数の機能を組み合わせて動作を検証すること。サブシステム内部の機能を統合する「内部統合テスト」と、各サブシステムの機能を統合する「外部統合テスト」の2種類がある。
　 送信側にデータを作成させて、受信側の入力データを用意したうえで動作を検証するパターンが多い。外部設計で定義した条件を満たすことで結合テストは完了する。
　●総合テスト...システムにおける機能をすべて結合して、本番と似た環境でシステムを検証すること。開発したシステムを全体的に検証するため「システムテスト」と呼ばれることもある。発注者の要求を満たした業務システムを開発できているか確認するのが目的。
　 プロジェクトの最初に作成された要件定義書を参考に、機能要件や非機能要件の不具合を検証するのが一般的である。一部の開発会社では発注者の環境で正常に動作するか確認するために、総合テストの後に「受け入れテスト」を実施する場合もある。
・テスト仕様書(どのようなもの、項目)...システムやソフトウェアが、クライアントのヒアリングをもとに作り上げた要件定義書の通りに機能するかどうか、テストするポイントをまとめたもの。結合テストや総合テストの工程でどの機能を、どのテスト技法を使ってテストするのか記されている。
　※テスト仕様書で必須な項目
　　1,テストを実施した環境
　　2,実施するテストの内容
　　3,テストを実施するためのシステムの操作手順
　　4,テストの実行結果
　　5,個々のテスト項目を識別するための番号や記号（通し番号など）
　　6,テストを実施した年月日
　　7,テストを実行した担当者
　　8,障害報告票番号（発生した障害の詳細を開発グループに報告する帳票の識別番号）
・バリデーション...対象がその仕様や文法などに照らして適切に記述・構築されているか否かを検証すること。入力内容や記述内容が要件を満たしているか、妥当性を確認すること。
・FW（フレームワーク）...アプリケーションを開発するとき、その土台として機能させるソフトウェアのこと。「枠組み」「骨組み」「構造」などといった意味があり、土台となるフレームワークに必要な機能を追加し、アプリケーションの開発を進めていくのが一般的。汎用的に必要なものをまとめている枠組み。
・PHPのFW（フレームワーク）の種類と特徴
　●PHPフレームワーク...PHPを使用してWebアプリケーション開発する際の土台として機能するソフトウェアのことを指す。共通するコードに機能性を加えて形成された骨組み、枠組み。
　特徴...プログラムの記述量を大幅に削減し、工数をさげる事が可能。作業効率の改善・コードの統一性を保持・バグの減少などのメリットがある。
　種類
　　・Laravel...2011年に登場したPHPフレームワークで、近年、PHPエンジニアの中で人気が急騰している。Love beautiful code? We do tooという理念を掲げ、PHP初心者でも美しいコードを書けるのが特徴。また、コードが書きやすく、直ぐに書き始められることなども魅力。
　　・CakePHP...2005年に登場しオープンソースで開発されたPHPフレームワーク。ケーキを焼く様に簡単にPHPで開発ができるフレームワークを目指して開発されている。
　　　メリットはMVCを採用していることやbakeコマンドによるプログラム自動生成機能があること、日本語に翻訳された優れたドキュメントの多いこと。現在でも求人・案件数が一番多く、人気のPHPフレームワーク。
　　　※MVC...「Model View Controller」。Webフレームワークで一般的に取り入れられているアプリケーション設定を整理するための概念の一つ。「モデル（Model）」「ビュー（View）」「コントローラー（Controller）」の３つの役割に分かれている。
　　　　　　　・モデル（Model）...データベースとデータのやり取りを行う機能を実装したり、データベースから取得したデータをプログラムで扱いやすい形式でデータを変換するというような役割。例えば、日付の変換機能。データベースが日付の保持を行う際に「2019‐11‐11」と保持されるのを「2019年11月11日」のように読みやすくする。
　　　　　　　・ビュー（View）...Webブラウザに表示するHTMLを動的に生成する部分のこと。データベースから取得したデータをHTMLに埋め込んでアクセスするたびに、異なるHTMLを生成するサイトを動的なサイトいう。例えば「Twitter」(タイムラインの新着順が変わっており、常にリアルタイムで変動)。
           ・コントローラー（Controller）...クライアントから来たリクエストURLに応じて、あらかじめ設定した処理を行う。動的なページを生成する際は次のような処理を行う。「クライアントからリクエストをコントローラーが受け取る」→「受け取った値をモデル経由でデータベースからデータを取得」
　　　　　　　　→「モデル経由で受け取ったデータをビューに渡す」→「動的生成されたHTMLをクライアントに渡す」。ことのようなモデルとの橋渡し、ビューとの橋渡しで、クライアントとの橋渡しの部分がコントローラーである。
　　・Symfony...2005年に登場したMITライセンスに基づくオープンソースのPHP5用フレームワーク。機能テストやデバックの為のツール群が標準装備されていたり、毎年2回リリースアップされ、サポートについても明確なルールを持っているのが特長。保守性と安定性を重視した構造。
　　・CodeIgniter...2006年に登場したPHPフレームワーク。コーディング規約への制限が緩く、自由度が高いというのが特徴。MVCモデルを採用しており、コードも簡単で軽量Webアプリケーション開発に向いている。
　　・ZendFramework...PHP5用MVCフレームワーク。技術パートナーにMicrosoftやIBM、Googleなど世界の優良企業があり、安心できるPHPフレームワークである。拡張性が高く他のPHPフレームワークほど規約を使わず、各アプリケーションに応じて上書きできるのが特徴。
　　・Phalcon...2012年に登場したフルスタック高速PHPフレームワーク。フレームワークコア部分がひとつのPHP機能拡張としてC言語で実装されているため、PHP文法解析やオペコード変換処理が必要なくなり、高速に動作出来ることが特徴。
　　・Slim...PHPのオープンソースマイクロフレームワーク。フレームワーク習得のためのコストがあまり掛からないことやシンプルなPHPWebアプリケーション、API開発向きであることが特徴。
　　　※マイクロフレームワーク...シンプル構成フレームワークのこと。
　　・Yii...大規模なWebアプリケーション開発に適したコンポーネントベースのPHPフレームワーク。日本での利用は少ないが、世界的には開発エンジニアが多い。軽量なキャッシュ機能があり、アクセス負荷が大きいサービスに適しており、ポータルサイトやCMSなどに使われることが多い。
　　・FuelPHP...2010年に登場した高速かつ軽量なオープンソースPHPフレームワーク。既存のPHPフレームワーク（CakePHP、CodeIgniter、Symfonyなど）の長所が活かされているため、高度なWebアプリケーション開発に適している。
　　・Flight...シンプルをコンセプトに開発されたフレームワーク。ドキュメントもシンプルで誰でもすぐに使用できるフレームワークであり、RESTfulWebアプリケーション開発向き。
　　　※RESTfulWebサービス...REST(Representational State Transfer)によって定義されたアーキテクチャーの原則に従ってリソース情報を取得、作成、修正、削除が行えるAPIインターフェースのこと。
　　　 簡単にいうと、リソースを必要するwebサイトや、デバイスなどが、RESTful webサービスに、データをくださいと要求すると、RESTful webサービスが、jsonや、xmlデータを返答するサービス。
・API...「Application Programming Interface」。アプリケーションをプログラミングするためのインターフェース。ソフトウェアやアプリケーションなどの一部を外部に向けて公開することにより、第三者が開発したソフトウェアと機能を共有できるようにしてくれるもの。
　USBは外部デバイスとパソコンを繋ぐインターフェースだが、APIはソフトウェア同士を繋げる。つまり、異なるソフトウェアやサービス間で認証機能を共有したり、チャット機能を共有したり、片方から数値データを取り込み、別のプログラムでそのデータを解析したりできるようになる。
　※インターフェイス...「何か」と「何か」をつなぐものという意味。例えば、USBも「パソコン」と「周辺機器」をつなぐものなので、インターフェイスの一つである。
・Ajax(エイジャックス)...「Asynchronous JavaScript ＋ XML」。JavaScriptとXMLを使って非同期にサーバとの間の通信を行うこと。一部の情報をサーバーに送信して、それを受け取り反映させる仕組み。「XMLHttpRequest」「JavaScript」「DOM」「XML」などの複数の機能が組み合わさって実装されている。
　※非同期通信...webプラウザから一部の情報をリクエストするので、それ以外の部分は変わらない。なので画面が白くなることがない。つまりサーバーからレスポンスが返ってこなくても他の作業ができる。
　●XMLHttpRequest...ブラウザ上でサーバーとHTTP通信を行うためのAPI。
　●JavaScript...XMLHttpRequestがjavascriptの組み込みオブジェクト。非同期通信はjavascriptを使わないと実装できない。
　　※組み込みオブジェクト...あらかじめ定義されているオブジェクトのこと。
　●DOM...Ajaxを使って動的なWebページを作成するときに、HTML・XML上のどの要素を変更するかを指定する。そこでDOMはHTMLやXMLを「ツリー構造」として展開し、アプリケーション側に文章の情報を伝え、加工や変更をしやすくする事ができる。
　　※ツリー構造...データ構造の一つで、一つの要素(ノード)が複数の子要素を持ち、一つの子要素が複数の孫要素を持ち、という形で階層が深くなるほど枝分かれしていく構造のこと。
　●XML...「Extensible Markup Language」。文書やデータの意味や構造を記述するためのマークアップ言語の一つ（HTMLみたいな)。タグを自由に設定でき、そのタグに意味づけをすることができる。例）<日付>5月1日</日付>、<食費>1500</食費>みたいな
・LAMP...データベースを利用したWebアプリケーションを開発・運用するのに適した、人気の高いオープンソースソフトウェアの組み合わせの一つ。OSの「Linux」、Webサーバの「Apache」、データベースの「MySQL」、プログラミング言語および実行環境の「PHP」「Perl」「Python」の頭文字を繋いだもの。
・クラウドサーバー、レンタルサーバー、VPSの違い
　●クラウドサーバー...「複数の仮想サーバーを個別で利用」クラウド上にあるサーバーを利用する形式。インターネットを経由して、クラウド上に存在するサーバーにアクセスする。
　 データのアップロードやダウンロードも、インターネット環境さえあれば可能なため、使い勝手に優れた形式と言える。仮想サーバーを利用するのも特徴で、１契約で複数の仮想サーバーを利用できる。
　●レンタルサーバー...「１つの物理サーバーを複数ユーザーで共用する」。OS・データベース・HTTPサーバーをインストールした物理サーバーを、利用者で共有するもの。
　 本来WebサイトやECサイトを構築・運営するためには、物理サーバーや回線を用意しなければならないが、これには高度な知識や費用が必要。そこで、レンタルサーバーを利用すれば、それらの設備の管理をベンダーに一任したうえでサイトを運営できる。
　 例えばWebサイトの場合、ユーザーはデータをレンタルサーバーにアップし、サイト訪問者はそのサーバーにアクセスすることになる。レンタルサーバーは小規模で利用されることが多く、他のユーザーの影響を受けやすいのが特徴。例えるならば、一つの部屋を複数のユーザーでシェアしている状況。
　●VPS(Virtual Private Server)...「１つの仮想サーバー群を個別で利用」。サーバーに複数の仮想サーバーを構築し、その１つひとつをユーザーに貸し出す形式。
　※仮想サーバー...サーバーを論理的に分割したもの。もともと１つのものを分割して、仮想的に複数のサーバーがあるような状態にしている。仮想サーバーを借りるのは、マンションの１室を借りるようなイメージ。
・クラウドサーバー、レンタルサーバー、VPSの使い分け...小規模・コストを抑えたいなら「レンタルサーバー」、中規模・コスパ重視なら「VPS」、大規模・拡張の可能性があるなら「クラウドサーバー」。
・AWS(Amazon Web Services)...Amazonが提供している100以上のクラウドコンピューティングサービスの総称。コスト削減や俊敏性を高めビジネスの効率化、ビジネススピードの加速化しイノベーションの加速を実現する。
　下記のような特徴がある。
　①豊富なサービス
　②世界最上級の運用専門知識
　③最もセキュアなセキュリティ基準
　④安心できる情報網（コミュニティやパートナーの存在）
　⑤まったく新しいテクノロジーを最速で提供し続けるサービスコンセプト
　※クラウドコンピューティング...インターネットを介してサーバー・ストレージ・データベース・ソフトウェアといったコンピューターを使った様々なサービスを利用することを指す。手元に1台のPCとインターネットに接続できる環境さえあれば、サーバーや大容量のストレージ、高速なデータベースなどを必要な分だけ利用できる。
・プラットフォーム...システムやサービスの「土台や基盤となる環境」のこと。例）Windows上で動く〇〇システム→〇〇システムのプラットフォームはWindows。
・カバレッジ...モノや範囲に対して全体の内どれくらいをカバーいているかを表すための指標。ソフトウェア開発においては、出来上がったプログラムのテストをする際に、どの程度をテスト対象とする（ことができる）かをカバレッジ（テストカバレッジ）という。
・エビデンス...直訳すると「証拠」「根拠」「証明」。システム業界では通常、作成したプログラムが想定通りに動作することを示す証拠、つまりテスト結果や検証結果、記録のことを指す。
・コンパイル...プログラミング言語で記述されたソフトウェアの設計図（ソースコード）を、コンピュータが実行可能な形式（オブジェクトコード）に変換する作業のこと。プログラマによって記述されたソースコードは、人間が読んで理解できるテキスト形式となっているが、
　そのままの形式では、コンピュータは理解できない。コンピュータが理解できるオブジェクトコードは、2進数もしくはそれに準じた形式（バイナリ）であり、そのためソースコードの形式を変換する必要があり、その変換作業がコンパイル。
・バッチ処理...一定量の(あるいは一定期間の)データを集め、一括処理するための処理方法。バッチ処理はあらかじめ登録した一連の処理を自動的に実行する処理方式を指す。複数のプログラムやファイル転送コマンドなどの実行順序を定義し、大量のデータを一括処理する。処理の単位を「バッチ」と呼ぶ。
・デプロイ(意味と方法、FTPソフトの種類)
　●意味...システム開発におけるデプロイとは、開発したアプリケーション（機能やサービス）をサーバー上に展開・配置して利用できるようにすること。
　●方法
　　・ブルーグリーンデプロイメント...ブルーとグリーンの二つの環境をあらかじめ用意し、現在の本番環境をブルーで動かしたまま、新環境をグリーンにデプロイする。そして、デプロイが無事完了したらグリーンにスイッチのように切り替えることで旧環境から新環境へアップデートさせる。
　　　新環境で問題が起こった場合は、再びブルーに切り替えることで簡単にロールバック（以前の状態に戻すこと）ができ、ダウンタイムをほぼ発生させることなく環境の切り替えが可能。
　　　新環境に問題がない場合は、グリーンがそのまま本番環境として運用され、ブルーとグリーンの扱いが逆転する。グリーン環境は次回のデプロイまで維持する必要があり、運用コストが発生するのがデメリット。
　　・イミュータブルデプロイメント....イミュータブルデプロイメントでは、新環境への切り替え後、問題ないことを確認したら旧環境は破棄、「デプロイのたびに新しい環境を作っては捨てる」ということを行う。ブルーグリーンデプロイメントと違い、イミュータブルデプロイメントでは旧環境の運用コストは生じないのがメリット。
　　・シンボリックデプロイメント...運用中のサーバー上の別の場所に新しいファイルを配置して、サービスが利用しているシンボリックリンクを変更することで新しいアプリケーションに切り替える。サーバーを増やす必要もなく低コストでデプロイを自動化できるが、ファイルによっては再起動が必要となる場合も。
　　　※シンボリックリンク...UNIX系のOS（MacとかLinuxとか）における、ファイルやフォルダの代理人ファイルのこと。Windowsでいうところのショートカットのようなもので、ファイルや、ディレクトリを参照するファイルの事を指す。シンボリックリンクファイル自体は、対象ファイルまでのパスを含んだただの小さなファイル。
　　・ローリングデプロイメント...複数あるサーバーに対して順番にロードバランサーから切り離してデプロイを行っていく手法。一時的に新旧環境が混在することになるので気を付ける必要がある。　
・データベース接続クライアント(説明、代表的なもの)...、データベース管理システム (DBMS) や関係データベース管理システム (RDBMS) 上のデータを容易に扱うためのソフトウェアのこと。
　●代表例
　　・DBeaver...マルチプラットフォーム (Windows, Linux, macOS) で動作するデータベース開発、データベース管理、データ分析ツール。
　　　対応するデータベースは MySQL, PostgreSQL, MariaDB, SQLite, Oracle, DB2, SQL Server, Sybase, MS Access, Teradata, Firebird, Derby 等となっており、無料かつ非常に強力かつ、機能も豊富。
　　・A5:SQL Mk-2...複雑化するデータベース開発を支援するために開発されたフリーのSQL開発ツール。高機能かつ軽量で、使い方が分かりやすいことを目標に開発されている。SQLを実行したり、テーブルを編集するほかに、SQLの実行計画を取得したり、ER図を作成したりすることが出来きる。
　　・PSqlEdit...非常に動作が軽い Windows で動作する PostgreSQL データベース接続ツール。起動も早く、かゆいところに手が届く機能が多数搭載されている。
・Gitホスティングサービス(説明、代表的なもの)...Gitを利用した、開発者を支援するWebサービス。
　●代表例
　　・GitHub...現在最も人気のあるバージョン管理システム。システムの多くはgitHubを利用して作られたものも多く、連携可能なサービスも多く、システム開発との親和性も高い。非公開のプライベートリポジトリの使用は有料。
　　・GitLab...無料でもプライベートリポジトリが無制限で使えるので、コスト面ではGitHubよりも有利。
　　　GitHub風のインターフェイスを持ち、リポジトリブラウザなどのリポジトリ管理機能に加え、コードレビューやイシュートラッカー、活動履歴機能（activity feed）、Wikiなどの機能を持つ。LDAPなどの認証機構との統合も可能で、大規模な環境でも利用できる。
　　・BitBucket...ームでの協同作業を容易にする分散型バージョン管理システム。大規模環境でもコラボレーションできる唯一のGitソリューション。5人以下での使用の場合は無料。
・チケット管理ツール(説明、代表的なもの)...タスク管理ツールのこと。プロジェクト毎に発生する各種タスクを発行して、制作者に対して仕事を依頼するためのもの。仕事を円滑に進め、より効率的な働き方を実現できる。
　●代表例
　　・Wrike...クラウド型のタスク管理に強いプロジェクトツール。特にスケジュール管理について、ダッシュボードで一画面にまとめられるため、感覚的にプロジェクトの進歩状況を掴む事ができる。
　　・Backlog...クラウド型のタスク管理に特化したプロジェクト管理ツール。ガンチャートやマイルストーンが簡単に作れる。
　　・Trello...タスクのカードを自由に動かしながら視覚的にプロジェクトを管理できるアプリケーション。付箋のように貼ったり剥がしたりできる。複数人の作業をリアルタイムで確認できるためリモートワークでも力を発揮する。
　　・Redmine...世界的に非常に認知度の高いプロジェクト管理ツール。自由度の高いクラウド型の管理ツール。ブラウザを登録する事で、ガンチャートやロードマップが簡単に作れる上に、管理者権限を利用したwikiの作成なども行えるため、新しく製品を作る場合などで力を発揮する。
　　・Jira...ソフトウェア開発のために作られた管理ツールで、レポート機能に特徴がある。アジャイルで進めていく開発チームには非常に好評。
　　・InnoPM...工数管理やタスク管理が非常に見やすい事で有名なツール。クラウド型で柔軟にマスタを変更できるため、プロジェクトに合わせて、多くの部分をカスタマイズできる。
・DBのJOINとは...複数テーブルの結合を行いたいときに使用する命令。「クロス結合」「内部結合」「外部結合」の３種類に分けられる。
　●クロス結合...全ての組み合わせを作成する結合方式。
　●内部結合...指定した関連性のある要素を軸にして、組み合わせてくれる命令。実践で最も使われる。テーブル同士を組み合わせて表示するのに一番適した方式。
　●外部結合...内部結合+αの情報を表示。「LEFT OUTER JOIN」「RIGHT OUTER JOIN」「FULL OUTER JOIN」に分かれている。
・SEO(Search Engine Optimization)...Webサイトを制作するときに、Googleなどの検索エンジンの検索で上位に表示されるようにページやサイト全体を最適化すること、またはそのための技術のこと。